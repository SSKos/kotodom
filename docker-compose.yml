services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - /Users/kos/projects/Kotodom_24-10-29/koto-dom_proj/koto-dom/client/src/assets/img/cats:/app/client/src/assets/img/cats
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./client/src/assets/img/cats:/app/client/src/assets/img/cats
      - ./wait-for-it.sh:/wait-for-it.sh
    depends_on:
      - client
      - server
      - mongodb
    networks:
      - koto-net
    command: ["./wait-for-it.sh", "client:8080", "--timeout=30", "--", "/docker-entrypoint.sh", "nginx", "-g", "daemon off;"]

  client:
    build:
      context: .
      dockerfile: client/Dockerfile
    container_name: vue-client
    ports:
      - "8080:8080"
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - koto-net

  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    container_name: node-server
    ports:
      - "5001:5001"
    volumes:
      - ./server:/app
      - /app/node_modules
      - ./client/src/assets/img/cats:/app/client/src/assets/img/cats
      - /Users/kos/projects/Kotodom_24-10-29/koto-dom_proj/koto-dom/client/src/assets/img/cats:/app/client/src/assets/img/cats
    command: yarn run dev
    networks:
      - koto-net
    depends_on:
      - mongodb

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - koto-net

networks:
  koto-net:
    driver: bridge

volumes:
  mongo-data: